[{"/Users/creyesb/Documents/odonbot/client/src/components/ListaPaciente/ListaPaciente.js":"1","/Users/creyesb/Documents/odonbot/client/src/components/Paciente/Paciente.js":"2","/Users/creyesb/Documents/odonbot/client/src/components/FormularioPaciente/FormularioPaciente.js":"3","/Users/creyesb/Documents/odonbot/client/src/api/paciente.js":"4","/Users/creyesb/Documents/odonbot/client/src/index.js":"5","/Users/creyesb/Documents/odonbot/client/src/providers/AuthProviders.js":"6","/Users/creyesb/Documents/odonbot/client/src/layout/LayoutEstudiante.js":"7","/Users/creyesb/Documents/odonbot/client/src/layout/LayoutBasic.js":"8","/Users/creyesb/Documents/odonbot/client/src/pages/Error.js":"9","/Users/creyesb/Documents/odonbot/client/src/components/RegistroPage/Registro.js":"10","/Users/creyesb/Documents/odonbot/client/src/api/config.js":"11","/Users/creyesb/Documents/odonbot/client/src/hooks/useAuth.js":"12","/Users/creyesb/Documents/odonbot/client/src/components/Chatbot/Chatbot.js":"13","/Users/creyesb/Documents/odonbot/client/src/components/MenuSider/index.js":"14","/Users/creyesb/Documents/odonbot/client/src/components/Chatbot/Message.js":"15","/Users/creyesb/Documents/odonbot/client/src/components/MenuSiderProfe/MenuSider.js":"16","/Users/creyesb/Documents/odonbot/client/src/pages/ProfesorPage/HomeProfesor.js":"17","/Users/creyesb/Documents/odonbot/client/src/utils/constants.js":"18","/Users/creyesb/Documents/odonbot/client/src/components/MenuSider/MenuSider.js":"19","/Users/creyesb/Documents/odonbot/client/src/pages/EstudiantePage/HomeEstudiante.js":"20","/Users/creyesb/Documents/odonbot/client/src/components/PerfilEstudiante/PerfilEstudiante.js":"21","/Users/creyesb/Documents/odonbot/client/src/App.js":"22","/Users/creyesb/Documents/odonbot/client/src/components/Solicitudes/Solicitudes.js":"23","/Users/creyesb/Documents/odonbot/client/src/components/MenuTop/MenuTop.js":"24","/Users/creyesb/Documents/odonbot/client/src/pages/Chat/Chat.js":"25","/Users/creyesb/Documents/odonbot/client/src/config/routes.js":"26","/Users/creyesb/Documents/odonbot/client/src/components/LogInForm/LogInForm.js":"27","/Users/creyesb/Documents/odonbot/client/src/utils/formValidation.js":"28","/Users/creyesb/Documents/odonbot/client/src/layout/LayoutProfesor.js":"29","/Users/creyesb/Documents/odonbot/client/src/components/MenuSiderProfe/index.js":"30","/Users/creyesb/Documents/odonbot/client/src/components/MenuTop/index.js":"31","/Users/creyesb/Documents/odonbot/client/src/api/user.js":"32","/Users/creyesb/Documents/odonbot/client/src/components/ModalForm/ModalForm.js":"33","/Users/creyesb/Documents/odonbot/client/src/components/FormularioEditarPaciente/FormEditPaciente.js":"34","/Users/creyesb/Documents/odonbot/client/src/reportWebVitals.js":"35","/Users/creyesb/Documents/odonbot/client/src/api/auth.js":"36","/Users/creyesb/Documents/odonbot/client/src/components/FormularioEditarUser/FormEditUser.js":"37","/Users/creyesb/Documents/odonbot/client/src/components/User/User.js":"38","/Users/creyesb/Documents/odonbot/client/src/components/Estudiante/Estudiante.js":"39","/Users/creyesb/Documents/odonbot/client/src/components/ListaEstudiantes/ListaEstudiante.js":"40","/Users/creyesb/Documents/odonbot/client/src/components/PatientPhotoCard/PatientPhotoCard.js":"41"},{"size":5610,"mtime":1614900958497,"results":"42","hashOfConfig":"43"},{"size":1271,"mtime":1614830226400,"results":"44","hashOfConfig":"43"},{"size":6141,"mtime":1613170187346,"results":"45","hashOfConfig":"43"},{"size":2141,"mtime":1612561398404,"results":"46","hashOfConfig":"43"},{"size":478,"mtime":1610749045083,"results":"47","hashOfConfig":"43"},{"size":981,"mtime":1613271098118,"results":"48","hashOfConfig":"43"},{"size":1869,"mtime":1613515934633,"results":"49","hashOfConfig":"43"},{"size":996,"mtime":1606886503960,"results":"50","hashOfConfig":"43"},{"size":409,"mtime":1606883209064,"results":"51","hashOfConfig":"43"},{"size":6657,"mtime":1613169866090,"results":"52","hashOfConfig":"43"},{"size":163,"mtime":1608706948911,"results":"53","hashOfConfig":"43"},{"size":141,"mtime":1608938193448,"results":"54","hashOfConfig":"43"},{"size":6010,"mtime":1617326524874,"results":"55","hashOfConfig":"43"},{"size":38,"mtime":1606883840043,"results":"56","hashOfConfig":"43"},{"size":1335,"mtime":1617250497811,"results":"57","hashOfConfig":"43"},{"size":1978,"mtime":1615002364617,"results":"58","hashOfConfig":"43"},{"size":219,"mtime":1606881146206,"results":"59","hashOfConfig":"43"},{"size":87,"mtime":1608877095624,"results":"60","hashOfConfig":"43"},{"size":1479,"mtime":1614915713890,"results":"61","hashOfConfig":"43"},{"size":2025,"mtime":1609603484885,"results":"62","hashOfConfig":"43"},{"size":3932,"mtime":1613273566564,"results":"63","hashOfConfig":"43"},{"size":718,"mtime":1608948808349,"results":"64","hashOfConfig":"43"},{"size":3166,"mtime":1615775061757,"results":"65","hashOfConfig":"43"},{"size":1950,"mtime":1608965739974,"results":"66","hashOfConfig":"43"},{"size":372,"mtime":1609603433908,"results":"67","hashOfConfig":"43"},{"size":2348,"mtime":1614902024096,"results":"68","hashOfConfig":"43"},{"size":2397,"mtime":1613516008725,"results":"69","hashOfConfig":"43"},{"size":851,"mtime":1613169936324,"results":"70","hashOfConfig":"43"},{"size":1455,"mtime":1613515935776,"results":"71","hashOfConfig":"43"},{"size":38,"mtime":1609168242053,"results":"72","hashOfConfig":"43"},{"size":36,"mtime":1606883819423,"results":"73","hashOfConfig":"43"},{"size":2478,"mtime":1614805058067,"results":"74","hashOfConfig":"43"},{"size":354,"mtime":1612990550091,"results":"75","hashOfConfig":"43"},{"size":6216,"mtime":1613519643647,"results":"76","hashOfConfig":"43"},{"size":362,"mtime":1606708851546,"results":"77","hashOfConfig":"43"},{"size":1815,"mtime":1608939644584,"results":"78","hashOfConfig":"43"},{"size":572,"mtime":1613888058753,"results":"79","hashOfConfig":"43"},{"size":1085,"mtime":1614900738805,"results":"80","hashOfConfig":"43"},{"size":949,"mtime":1614911115781,"results":"81","hashOfConfig":"43"},{"size":3658,"mtime":1615005446399,"results":"82","hashOfConfig":"43"},{"size":823,"mtime":1617249192911,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},"156llia",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"99"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/creyesb/Documents/odonbot/client/src/components/ListaPaciente/ListaPaciente.js",["184"],"import React, { useState, useEffect } from \"react\";\nimport { List, Avatar, Button, Switch } from \"antd\";\nimport \"./ListaPaciente.scss\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  UserSwitchOutlined,\n} from \"@ant-design/icons\";\nimport { getPaciente } from \"../../api/paciente\";\nimport ModalForm from \"../ModalForm/ModalForm\";\nimport FormEditPaciente from \"../FormularioEditarPaciente/FormEditPaciente\";\n\nexport default function ListaPaciente(props) {\n  const [paciente, setPaciente] = useState([]);\n  const { pacienteActivo, pacienteInactivo, setReloadPaciente } = props;\n  /* Para mostrar los pacientes activos/inactivos*/\n  const [viewPacienteActivo, setViewPacienteActivo] = useState(false);\n  //Estados para el modal\n  /*Estado para mostrar/ocultar estado */\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  /* texto del titulo del modal ej: nombre del paciente*/\n  const [modalTitle, setModalTitle] = useState(\"\");\n  /* Estado para el contenido del modal */\n  const [modalContent, setModalContent] = useState(null);\n\n  useEffect(() => {\n    getPaciente().then((response) => {\n      setPaciente(response.paciente);\n    });\n  }, []);\n\n  return (\n    <div className=\"listapaciente\">\n      <div className=\"listapaciente__switch\">\n        <Switch\n          className=\"listapaciente__switchButton\"\n          defaultChecked\n          onChange={() => setViewPacienteActivo(!viewPacienteActivo)}\n        />\n        <span>\n          {viewPacienteActivo ? \"Pacientes Inactivos\" : \"Pacientes Activos \"}\n        </span>\n      </div>\n      {viewPacienteActivo ? (\n        <PacienteActivos\n          pacienteActivo={pacienteActivo}\n          isModalVisible={isModalVisible}\n          setModalContent={setModalContent}\n          setModalTitle={setModalTitle}\n          setIsModalVisible={setIsModalVisible}\n          setReloadPaciente={setReloadPaciente}\n        />\n      ) : (\n        <PacienteInactivos\n          pacienteInactivo={pacienteInactivo}\n          isModalVisible={isModalVisible}\n          setModalContent={setModalContent}\n          setModalTitle={setModalTitle}\n          setIsModalVisible={setIsModalVisible}\n          setReloadPaciente={setReloadPaciente}\n        />\n      )}\n\n      <ModalForm\n        title={modalTitle}\n        isVisible={isModalVisible}\n        setIsVisible={setIsModalVisible}\n      >\n        {modalContent}\n      </ModalForm>\n    </div>\n  );\n}\n\nfunction PacienteActivos(props) {\n  const {\n    pacienteActivo,\n    setModalContent,\n    setModalTitle,\n    setIsModalVisible,\n    setReloadPaciente,\n  } = props;\n\n  const editPaciente = (paciente) => {\n    setIsModalVisible(true);\n    setModalTitle(`Editar ${paciente.nombrePaciente}`);\n    setModalContent(\n      <FormEditPaciente\n        paciente={paciente}\n        setIsModalVisible={setIsModalVisible}\n        setReloadPaciente={setReloadPaciente}\n      />\n    );\n\n    //setModalContent(\"Formulario de paciente\");\n  };\n\n  return (\n    <div>\n      <List\n        className=\"pacienteActivo\"\n        itemLayout=\"horizontal\"\n        dataSource={pacienteActivo}\n        renderItem={(item) => (\n          <List.Item\n            actions={[\n              <Button\n                icon={<UserSwitchOutlined />}\n                type=\"dashed\"\n                onClick={() => console.log(\"Desactivar\")}\n              ></Button>,\n              <Button\n                icon={<EditOutlined />}\n                type=\"primary\"\n                onClick={() => editPaciente(item)}\n              ></Button>,\n              <Button\n                icon={<DeleteOutlined />}\n                type=\"danger\"\n                onClick={() => console.log(\"Eliminar\")}\n              ></Button>,\n            ]}\n          >\n            <List.Item.Meta\n              avatar={\n                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n              }\n              title={item.nombrePaciente}\n              description={item.sintomas}\n            />\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n}\nfunction PacienteInactivos(props) {\n  const {\n    pacienteInactivo,\n    setModalContent,\n    setModalTitle,\n    setIsModalVisible,\n    setReloadPaciente,\n  } = props;\n\n  const editPaciente = (paciente) => {\n    setIsModalVisible(true);\n    setModalTitle(`Editar ${paciente.nombrePaciente}`);\n    setModalContent(\n      <FormEditPaciente\n        paciente={paciente}\n        setIsModalVisible={setIsModalVisible}\n        setReloadPaciente={setReloadPaciente}\n      />\n    );\n    console.log({ paciente });\n  };\n  return (\n    <div>\n      <List\n        className=\"pacienteActivo\"\n        itemLayout=\"horizontal\"\n        dataSource={pacienteInactivo}\n        renderItem={(item) => (\n          <List.Item\n            actions={[\n              <Button\n                icon={<UserSwitchOutlined />}\n                type=\"default\"\n                onClick={() => console.log(\"Desactivar\")}\n              ></Button>,\n              <Button\n                icon={<EditOutlined />}\n                type=\"primary\"\n                onClick={() => editPaciente(item)}\n              ></Button>,\n              <Button\n                icon={<DeleteOutlined />}\n                type=\"danger\"\n                onClick={() => console.log(\"Eliminar\")}\n              ></Button>,\n            ]}\n          >\n            <List.Item.Meta\n              avatar={\n                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n              }\n              title={item.nombrePaciente}\n              description={item.sintomas}\n            />\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n}\n",["185","186"],"/Users/creyesb/Documents/odonbot/client/src/components/Paciente/Paciente.js",[],["187","188"],"/Users/creyesb/Documents/odonbot/client/src/components/FormularioPaciente/FormularioPaciente.js",["189","190","191","192","193"],"import React, { useState } from \"react\";\nimport { Button, Form, Input, notification, Modal, Radio } from \"antd\";\nimport {\n  UserOutlined,\n  IdcardOutlined,\n  UserAddOutlined,\n} from \"@ant-design/icons\";\n\nimport { crearPaciente } from \"../../api/paciente\";\nimport \"./FormularioPaciente.scss\";\n\nconst { TextArea } = Input;\n\nfunction FormularioPacinte() {\n  const [inputs, setInputs] = useState({\n    nombrePaciente: \"\",\n    edad: \"\",\n    peso: \"\",\n    sintomas: \"\",\n    motivoConsulta: \"\",\n    enfermedadBase: \"\",\n    habitos: \"\",\n    pacienteState: \"\",\n  });\n\n  const [formValid, setFormValid] = useState({\n    nombrePaciente: false,\n    edad: false,\n    peso: false,\n    sintomas: false,\n    motivoConsulta: false,\n    enfermedadBase: false,\n    habitos: false,\n    pacienteState: false,\n  });\n\n  const changeForm = (e) => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const register = async (e) => {\n    const result = await crearPaciente(inputs);\n    if (!result.ok) {\n      notification[\"success\"]({\n        message: result.message,\n      });\n      resetForm();\n    } else {\n      notification[\"error\"]({\n        message: result.message,\n      });\n    }\n  };\n\n  const [visible, setVisible] = React.useState(false);\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const [modalText, setModalText] = React.useState(\"\");\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleCancel = () => {\n    console.log(\"Cancelando\");\n    setVisible(false);\n  };\n  const onChangeEstado = (value) => {\n    console.log(value);\n  };\n\n  const resetForm = () => {\n    const inputs = document.getElementsByTagName(\"input\");\n    for (let i = 0; i < inputs.length; i++) {\n      inputs[i].classList.remove(\"success\");\n      inputs[i].classList.remove(\"error\");\n    }\n\n    setInputs({\n      nombrePaciente: \"\",\n      edad: \"\",\n      peso: \"\",\n      sintomas: \"\",\n      motivoConsulta: \"\",\n      enfermedadBase: \"\",\n      habitos: \"\",\n      pacienteState: \"\",\n    });\n    setFormValid({\n      nombrePaciente: false,\n      edad: false,\n      peso: false,\n      sintomas: false,\n      motivoConsulta: false,\n      enfermedadBase: false,\n      habitos: false,\n      pacienteState: false,\n    });\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"paciente__addButton\">\n        <Button\n          type=\"primary\"\n          shape=\"round\"\n          icon={<UserAddOutlined />}\n          onClick={showModal}\n          className=\"paciente__addButton__button\"\n        />\n      </div>\n\n      <Modal\n        title=\"Nuevo paciente virtual\"\n        visible={visible}\n        onOk={register}\n        confirmLoading={confirmLoading}\n        onCancel={handleCancel}\n        okText=\"Crear\"\n        cancelText=\"Cancelar\"\n      >\n        <Form\n          className=\"registerForm\"\n          onChange={changeForm}\n          onFinish={register}\n        >\n          <Form.Item>\n            <label>Nombre Paciente</label>\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"nombrePaciente\"\n              placeholder=\"Ingrese nombre del paciente\"\n              className=\"register-form__input\"\n              value={inputs.nombrePaciente}\n            />\n          </Form.Item>\n          <Form.Item>\n            <label>Edad</label>\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"edad\"\n              placeholder=\"Ingrese edad del paciente\"\n              className=\"register-form__input\"\n              value={inputs.edad}\n            />\n          </Form.Item>\n          <Form.Item>\n            <label>Peso</label>\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"peso\"\n              placeholder=\"Ingrese peso del paciente\"\n              className=\"register-form__input\"\n              value={inputs.peso}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <label>Motivo Consulta</label>\n            <Input\n              prefix={<IdcardOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"motivoConsulta\"\n              placeholder=\"Ingrese motivo de consulta\"\n              className=\"register-form__input\"\n              value={inputs.motivoConsulta}\n            />\n          </Form.Item>\n          <Form.Item>\n            <label>Sintomas</label>\n            <TextArea\n              rows={2}\n              prefix={<IdcardOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"sintomas\"\n              placeholder=\"Ingrese sintomas\"\n              className=\"register-form__input\"\n              value={inputs.sintomas}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <label>Enfermedades Base</label>\n            <TextArea\n              rows={2}\n              prefix={<IdcardOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"enfermedadBase\"\n              placeholder=\"Ingrese enfermedades base\"\n              className=\"register-form__input\"\n              value={inputs.enfermedadBase}\n            />\n          </Form.Item>\n          <Form.Item>\n            <label>Hábitos</label>\n            <TextArea\n              rows={2}\n              prefix={<IdcardOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"habitos\"\n              placeholder=\"Ingrese hábitos\"\n              className=\"register-form__input\"\n              value={inputs.habitos}\n            />\n          </Form.Item>\n          <Form.Item>\n            <label>Estado paciente</label>\n            <br></br>\n\n            <Radio.Group\n              value={inputs.pacienteState}\n              type=\"number\"\n              name=\"pacienteState\"\n            >\n              <Radio value={0}>Activo</Radio>\n              <Radio value={1}>Inactivo</Radio>\n            </Radio.Group>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default FormularioPacinte;\n","/Users/creyesb/Documents/odonbot/client/src/api/paciente.js",[],["194","195"],"/Users/creyesb/Documents/odonbot/client/src/index.js",[],["196","197"],"/Users/creyesb/Documents/odonbot/client/src/providers/AuthProviders.js",[],"/Users/creyesb/Documents/odonbot/client/src/layout/LayoutEstudiante.js",[],"/Users/creyesb/Documents/odonbot/client/src/layout/LayoutBasic.js",[],"/Users/creyesb/Documents/odonbot/client/src/pages/Error.js",[],["198","199"],"/Users/creyesb/Documents/odonbot/client/src/components/RegistroPage/Registro.js",[],"/Users/creyesb/Documents/odonbot/client/src/api/config.js",[],"/Users/creyesb/Documents/odonbot/client/src/hooks/useAuth.js",["200"],"import { useContext } from \"react\";\nimport { AuthContext } from \"../providers/AuthProviders\";\n\nexport default () => useContext(AuthContext);\n","/Users/creyesb/Documents/odonbot/client/src/components/Chatbot/Chatbot.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/MenuSider/index.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/Chatbot/Message.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/MenuSiderProfe/MenuSider.js",[],"/Users/creyesb/Documents/odonbot/client/src/pages/ProfesorPage/HomeProfesor.js",[],"/Users/creyesb/Documents/odonbot/client/src/utils/constants.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/MenuSider/MenuSider.js",[],"/Users/creyesb/Documents/odonbot/client/src/pages/EstudiantePage/HomeEstudiante.js",[],["201","202"],"/Users/creyesb/Documents/odonbot/client/src/components/PerfilEstudiante/PerfilEstudiante.js",[],["203","204"],"/Users/creyesb/Documents/odonbot/client/src/App.js",[],["205","206"],"/Users/creyesb/Documents/odonbot/client/src/components/Solicitudes/Solicitudes.js",["207","208","209","210"],"import React, { useState, useEffect } from \"react\";\nimport { List, Avatar, Button, Switch } from \"antd\";\nimport \"./Solicitudes.scss\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport { getUserAPI } from \"../../api/user\";\n/*\nimport ModalForm from \"../ModalForm/ModalForm\";\nimport FormEditUser from \"../FormularioEditarUser/FormEditUser\";*/\n\nexport default function Solicitudes(props) {\n  const { userActive, userInactive } = props;\n\n  const [user, setUser] = useState([]);\n\n  //const [viewUserActive, setViewUserActive] = useState(true);\n  /* Para mostrar los pacientes activos/inactivos*/\n  //Estados para el modal\n  /*Estado para mostrar/ocultar estado */\n  //const [isModalVisible, setIsModalVisible] = useState(false);\n  /* texto del titulo del modal ej: nombre del paciente*/\n  //const [modalTitle, setModalTitle] = useState(\"\");\n  /* Estado para el contenido del modal */\n  //const [modalContent, setModalContent] = useState(null);\n\n  useEffect(() => {\n    getUserAPI().then((response) => {\n      setUser(response.user);\n    });\n  }, []);\n  return (\n    <div className=\"estilo-solicitud\">\n      <div className=\"estilo-solicitud__switch\">\n        <span>{\"Registro de estudiantes nuevos.\"}</span>\n      </div>\n\n      {<UserInactive userInactive={userInactive} />}\n    </div>\n  );\n}\n\nfunction UserActive(props) {\n  const { userActive } = props;\n  return (\n    <List\n      className=\"user-active\"\n      itemLayout=\"horizontal\"\n      dataSource={userActive}\n      renderItem={(item) => (\n        <List.Item\n          actions={[\n            <Button\n              icon={<CloseOutlined />}\n              type=\"danger\"\n              onClick={() => console.log(\"Rechazar\")}\n            ></Button>,\n\n            <Button\n              icon={<CheckOutlined />}\n              type=\"primary\"\n              onClick={() => console.log(\"Aceptar\")}\n            ></Button>,\n          ]}\n        >\n          <List.Item.Meta\n            avatar={\n              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n            }\n            title={item.nombre + \" \" + item.apellidoP + \" \" + item.apellidoM}\n            description={item.email}\n          />\n        </List.Item>\n      )}\n    />\n  );\n}\nfunction UserInactive(props) {\n  const { userInactive } = props;\n  return (\n    <List\n      className=\"user-active\"\n      itemLayout=\"horizontal\"\n      dataSource={userInactive}\n      renderItem={(item) => (\n        <List.Item\n          actions={[\n            <Button\n              icon={<CloseOutlined />}\n              type=\"danger\"\n              onClick={() => console.log(\"Rechazar\")}\n            ></Button>,\n\n            <Button\n              icon={<CheckOutlined />}\n              type=\"primary\"\n              onClick={() => console.log(\"Aceptar\")}\n            ></Button>,\n          ]}\n        >\n          <List.Item.Meta\n            avatar={\n              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n            }\n            title={item.nombre + \" \" + item.apellidoP + \" \" + item.apellidoM}\n            description={item.email}\n          />\n        </List.Item>\n      )}\n    />\n  );\n}\n","/Users/creyesb/Documents/odonbot/client/src/components/MenuTop/MenuTop.js",[],"/Users/creyesb/Documents/odonbot/client/src/pages/Chat/Chat.js",[],"/Users/creyesb/Documents/odonbot/client/src/config/routes.js",["211"],"//Layouts\nimport LayoutProfesor from \"../layout/LayoutProfesor\";\nimport LayoutEstudiante from \"../layout/LayoutEstudiante\";\nimport LayoutBasic from \"../layout/LayoutBasic\";\n//pages\n\nimport HomeEstudiante from \"../pages/EstudiantePage/HomeEstudiante\";\nimport HomeProfesor from \"../pages/ProfesorPage/HomeProfesor\";\n//import MainLogin from \"../pages/MainLogin\";\nimport Error from \"../pages/Error\";\nimport Registro from \"../components/RegistroPage/Registro\";\nimport LogInForm from \"../components/LogInForm/LogInForm\";\nimport Perfil from \"../components/PerfilEstudiante/PerfilEstudiante\";\nimport Chat from \"../pages/Chat/Chat\";\nimport Solicitudes from \"../components/Solicitudes/Solicitudes\";\nimport Paciente from \"../components/Paciente/Paciente\";\nimport User from \"../components/User/User\";\nimport Estudiante from \"../components/Estudiante/Estudiante\";\nconst routes = [\n  {\n    path: \"/profesor\",\n    component: LayoutProfesor,\n    exact: false,\n    routes: [\n      {\n        path: \"/profesor\",\n        component: HomeProfesor,\n        exact: true,\n      },\n      {\n        path: \"/profesor/solicitudes\",\n        component: User,\n        exact: true,\n      },\n      {\n        path: \"/profesor/pacientes\",\n        component: Paciente,\n        exact: true,\n      },\n      {\n        path: \"/profesor/perfil\",\n        component: Perfil,\n        exact: true,\n      },\n      {\n        path: \"/profesor/estudiantes\",\n        component: Estudiante,\n        exact: true,\n      },\n      {\n        component: Error,\n      },\n    ],\n  },\n  {\n    path: \"/estudiante\",\n    component: LayoutEstudiante,\n    exact: false,\n    routes: [\n      {\n        path: \"/estudiante\",\n        component: HomeEstudiante,\n        exact: true,\n      },\n      {\n        path: \"/estudiante/perfil\",\n        component: Perfil,\n        exact: true,\n      },\n      {\n        path: \"/estudiante/chat\",\n        component: Chat,\n        exact: true,\n      },\n      {\n        component: Error,\n      },\n    ],\n  },\n\n  {\n    path: \"/\",\n    component: LayoutBasic,\n    exact: false,\n    routes: [\n      {\n        path: \"/\",\n        component: LogInForm,\n        //component: MainLogin,\n        exact: true,\n      },\n      {\n        path: \"/registro\",\n        component: Registro,\n        exact: true,\n      },\n      {\n        component: Error,\n      },\n    ],\n  },\n];\n\nexport default routes;\n","/Users/creyesb/Documents/odonbot/client/src/components/LogInForm/LogInForm.js",[],"/Users/creyesb/Documents/odonbot/client/src/utils/formValidation.js",[],"/Users/creyesb/Documents/odonbot/client/src/layout/LayoutProfesor.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/MenuSiderProfe/index.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/MenuTop/index.js",[],"/Users/creyesb/Documents/odonbot/client/src/api/user.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/ModalForm/ModalForm.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/FormularioEditarPaciente/FormEditPaciente.js",["212","213"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Form, Select, Col, Row, Input, notification } from \"antd\";\nimport { UserAddOutlined } from \"@ant-design/icons\";\nimport \"./FormEditPaciente.scss\";\nimport { updatePacienteAPI } from \"../../api/paciente\";\nconst { TextArea } = Input;\n\nexport default function FormEditPaciente(props) {\n  const { paciente, setIsModalVisible, setReloadPaciente } = props;\n  const [dataPaciente, setDataPaciente] = useState({\n    nombrePaciente: paciente.nombrePaciente,\n    edad: paciente.edad,\n    peso: paciente.peso,\n    sintomas: paciente.sintomas,\n    motivoConsulta: paciente.motivoConsulta,\n    enfermedadBase: paciente.enfermedadBase,\n    habitos: paciente.habitos,\n    pacienteState: paciente.pacienteState,\n  });\n\n  const updateDataPaciente = () => {\n    const pacienteUpdate = dataPaciente;\n\n    updatePacienteAPI(pacienteUpdate, paciente._id).then((result) => {\n      notification[\"success\"]({\n        message: result.message,\n      });\n    });\n    setIsModalVisible(false);\n    setReloadPaciente(true);\n  };\n\n  return (\n    <div>\n      <EditForm\n        paciente={paciente}\n        dataPaciente={dataPaciente}\n        setDataPaciente={setDataPaciente}\n        updateDataPaciente={updateDataPaciente}\n      />\n    </div>\n  );\n}\n\nfunction EditForm(props) {\n  const { dataPaciente, setDataPaciente, updateDataPaciente, paciente } = props;\n  const { Option } = Select;\n  return (\n    <div>\n      <Form className=\"form-edit\" onFinish={updateDataPaciente}>\n        <Row gutter={24}>\n          <Col span={24}>\n            <Form.Item>\n              <label>Nombre Paciente</label>\n              <Input\n                placeholder=\"Nombre paciente\"\n                value={dataPaciente.nombrePaciente}\n                type=\"text\"\n                name=\"nombrePaciente\"\n                icon={<UserAddOutlined />}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    nombrePaciente: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={24}>\n          <Col span={8}>\n            <Form.Item>\n              <label>Peso</label>\n              <Input\n                placeholder=\"Edad\"\n                value={dataPaciente.peso}\n                type=\"text\"\n                name=\"peso\"\n                icon={<UserAddOutlined />}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    peso: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item>\n              <label>Edad</label>\n              <Input\n                value={dataPaciente.edad}\n                type=\"text\"\n                name=\"edad\"\n                icon={<UserAddOutlined />}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    edad: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <label>Estado</label>\n            <Select\n              placeholder=\"Estado\"\n              onChange={(e) =>\n                setDataPaciente({ ...dataPaciente, pacienteState: e })\n              }\n              value={dataPaciente.pacienteState ? \"Activo\" : \"Inactivo\"}\n            >\n              <Option value=\"1\">Activo</Option>\n              <Option value=\"0\">Inactivo</Option>\n            </Select>\n          </Col>\n        </Row>\n\n        <Row gutter={24}>\n          <Col span={24}>\n            <Form.Item>\n              <label>Sintomas</label>\n              <TextArea\n                rows={2}\n                value={dataPaciente.sintomas}\n                type=\"text\"\n                name=\"sintomas\"\n                icon={<UserAddOutlined />}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    sintomas: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row gutter={24}>\n          <Col span={24}>\n            <Form.Item>\n              <label>Motivo de Consulta</label>\n              <TextArea\n                rows={2}\n                value={dataPaciente.motivoConsulta}\n                type=\"text\"\n                name=\"motivoConsulta\"\n                icon={<UserAddOutlined />}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    motivoConsulta: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={24}>\n          <Col span={24}>\n            <Form.Item>\n              <label>Enfermedad base</label>\n              <TextArea\n                rows={2}\n                placeholder=\"Enfermedad base\"\n                value={dataPaciente.enfermedadBase}\n                type=\"text\"\n                name=\"enfermedadBase\"\n                icon={<UserAddOutlined />}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    enfermedadBase: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={24}>\n          <Col span={24}>\n            <Form.Item>\n              <label>Hábitos</label>\n              <TextArea\n                rows={2}\n                placeholder=\"hábitos\"\n                value={dataPaciente.habitos}\n                type=\"text\"\n                name=\"habitos\"\n                icon={<UserAddOutlined />}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    habitos: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Actualizar datos\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","/Users/creyesb/Documents/odonbot/client/src/reportWebVitals.js",[],["214","215"],"/Users/creyesb/Documents/odonbot/client/src/api/auth.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/FormularioEditarUser/FormEditUser.js",["216","217","218","219"],"import React, { useState } from \"react\";\n\nimport \"./FormEditUser.scss\";\n\nexport default function FormEditUser(props) {\n  const { user, setIsModalVisible, setReloadUser } = props;\n\n  const [dataUser, setDataUser] = useState({\n    nombre: user.nombre,\n    apellidoP: user.apellidoP,\n    apellidoM: user.apellidoM,\n    rut: user.rut,\n    email: user.email.toLowerCase(),\n    password: user.password,\n    passwordConfirmation: user.passwordConfirmation,\n    rol: user.rol,\n    usrState: user.usrState,\n  });\n  return (\n    <div>\n      <h2> {user.email}</h2>\n    </div>\n  );\n}\n",["220","221"],"/Users/creyesb/Documents/odonbot/client/src/components/User/User.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/Estudiante/Estudiante.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/ListaEstudiantes/ListaEstudiante.js",["222","223","224","225","226","227"],"import React, { useState, useEffect } from \"react\";\nimport { List, Avatar, Button, Switch } from \"antd\";\nimport \"./ListaEstudiante.scss\";\nimport {\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport { getUserAPI } from \"../../api/user\";\nimport ModalForm from \"../ModalForm/ModalForm\";\n\nexport default function Solicitudes(props) {\n  const { userActive, userInactive } = props;\n  const [user, setUser] = useState([]);\n\n  const [viewUserActive, setViewUserActive] = useState(true);\n  /* Para mostrar los pacientes activos/inactivos*/\n  //Estados para el modal\n  /*Estado para mostrar/ocultar estado */\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  /* texto del titulo del modal ej: nombre del paciente*/\n  const [modalTitle, setModalTitle] = useState(\"\");\n  /* Estado para el contenido del modal */\n  const [modalContent, setModalContent] = useState(null);\n\n  useEffect(() => {\n    getUserAPI().then((response) => {\n      setUser(response.user);\n    });\n  }, []);\n\n  return (\n    <div className=\"estilo-solicitud\">\n      {\n        <UserActive\n          userActive={userActive}\n          isModalVisible={isModalVisible}\n          setModalContent={setModalContent}\n          setModalTitle={setModalTitle}\n          setIsModalVisible={setIsModalVisible}\n        />\n      }\n      <ModalForm\n        title={modalTitle}\n        isVisible={isModalVisible}\n        setIsVisible={setIsModalVisible}\n      >\n        {modalContent}\n      </ModalForm>\n    </div>\n  );\n}\n\nfunction UserActive(props) {\n  const {\n    userActive,\n    setModalContent,\n    setModalTitle,\n    setIsModalVisible,\n  } = props;\n\n  const viewData = (user) => {\n    setIsModalVisible(true);\n    setModalTitle(\n      `Datos de: ${user.nombre} ${user.apellidoP} ${user.apellidoM}`\n    );\n    setModalContent(`Correo: ${user.email}`);\n  };\n  return (\n    <List\n      className=\"user-active\"\n      itemLayout=\"horizontal\"\n      dataSource={userActive}\n      renderItem={(item) => (\n        <List.Item\n          actions={[\n            <Button\n              icon={<EditOutlined />}\n              type=\"dashed\"\n              onClick={() => console.log(\"editar\")}\n            ></Button>,\n\n            <Button\n              icon={<InfoCircleOutlined />}\n              type=\"primary\"\n              onClick={() => viewData(item)}\n            ></Button>,\n          ]}\n        >\n          <List.Item.Meta\n            avatar={\n              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n            }\n            title={item.nombre + \" \" + item.apellidoP + \" \" + item.apellidoM}\n            description={item.email}\n          />\n        </List.Item>\n      )}\n    />\n  );\n}\nfunction UserInactive(props) {\n  const { userInactive } = props;\n  return (\n    <List\n      className=\"user-active\"\n      itemLayout=\"horizontal\"\n      dataSource={userInactive}\n      renderItem={(item) => (\n        <List.Item\n          actions={[\n            <Button\n              icon={<CloseOutlined />}\n              type=\"danger\"\n              onClick={() => console.log(\"Rechazar\")}\n            ></Button>,\n\n            <Button\n              icon={<CheckOutlined />}\n              type=\"primary\"\n              onClick={() => console.log(\"Aceptar\")}\n            ></Button>,\n          ]}\n        >\n          <List.Item.Meta\n            avatar={\n              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n            }\n            title={item.nombre + \" \" + item.apellidoP + \" \" + item.apellidoM}\n            description={item.email}\n          />\n        </List.Item>\n      )}\n    />\n  );\n}\n","/Users/creyesb/Documents/odonbot/client/src/components/PatientPhotoCard/PatientPhotoCard.js",["228","229","230"],{"ruleId":"231","severity":1,"message":"232","line":14,"column":10,"nodeType":"233","messageId":"234","endLine":14,"endColumn":18},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"235","replacedBy":"239"},{"ruleId":"237","replacedBy":"240"},{"ruleId":"231","severity":1,"message":"241","line":26,"column":10,"nodeType":"233","messageId":"234","endLine":26,"endColumn":19},{"ruleId":"231","severity":1,"message":"242","line":59,"column":26,"nodeType":"233","messageId":"234","endLine":59,"endColumn":43},{"ruleId":"231","severity":1,"message":"243","line":60,"column":10,"nodeType":"233","messageId":"234","endLine":60,"endColumn":19},{"ruleId":"231","severity":1,"message":"244","line":60,"column":21,"nodeType":"233","messageId":"234","endLine":60,"endColumn":33},{"ruleId":"231","severity":1,"message":"245","line":70,"column":9,"nodeType":"233","messageId":"234","endLine":70,"endColumn":23},{"ruleId":"235","replacedBy":"246"},{"ruleId":"237","replacedBy":"247"},{"ruleId":"235","replacedBy":"248"},{"ruleId":"237","replacedBy":"249"},{"ruleId":"235","replacedBy":"250"},{"ruleId":"237","replacedBy":"251"},{"ruleId":"252","severity":1,"message":"253","line":4,"column":1,"nodeType":"254","endLine":4,"endColumn":46},{"ruleId":"235","replacedBy":"255"},{"ruleId":"237","replacedBy":"256"},{"ruleId":"235","replacedBy":"257"},{"ruleId":"237","replacedBy":"258"},{"ruleId":"235","replacedBy":"259"},{"ruleId":"237","replacedBy":"260"},{"ruleId":"231","severity":1,"message":"261","line":2,"column":32,"nodeType":"233","messageId":"234","endLine":2,"endColumn":38},{"ruleId":"231","severity":1,"message":"262","line":11,"column":11,"nodeType":"233","messageId":"234","endLine":11,"endColumn":21},{"ruleId":"231","severity":1,"message":"263","line":13,"column":10,"nodeType":"233","messageId":"234","endLine":13,"endColumn":14},{"ruleId":"231","severity":1,"message":"264","line":41,"column":10,"nodeType":"233","messageId":"234","endLine":41,"endColumn":20},{"ruleId":"231","severity":1,"message":"265","line":15,"column":8,"nodeType":"233","messageId":"234","endLine":15,"endColumn":19},{"ruleId":"231","severity":1,"message":"266","line":1,"column":27,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"232","line":46,"column":62,"nodeType":"233","messageId":"234","endLine":46,"endColumn":70},{"ruleId":"235","replacedBy":"267"},{"ruleId":"237","replacedBy":"268"},{"ruleId":"231","severity":1,"message":"269","line":6,"column":17,"nodeType":"233","messageId":"234","endLine":6,"endColumn":34},{"ruleId":"231","severity":1,"message":"270","line":6,"column":36,"nodeType":"233","messageId":"234","endLine":6,"endColumn":49},{"ruleId":"231","severity":1,"message":"271","line":8,"column":10,"nodeType":"233","messageId":"234","endLine":8,"endColumn":18},{"ruleId":"231","severity":1,"message":"272","line":8,"column":20,"nodeType":"233","messageId":"234","endLine":8,"endColumn":31},{"ruleId":"235","replacedBy":"273"},{"ruleId":"237","replacedBy":"274"},{"ruleId":"231","severity":1,"message":"261","line":2,"column":32,"nodeType":"233","messageId":"234","endLine":2,"endColumn":38},{"ruleId":"231","severity":1,"message":"275","line":14,"column":23,"nodeType":"233","messageId":"234","endLine":14,"endColumn":35},{"ruleId":"231","severity":1,"message":"263","line":15,"column":10,"nodeType":"233","messageId":"234","endLine":15,"endColumn":14},{"ruleId":"231","severity":1,"message":"276","line":17,"column":10,"nodeType":"233","messageId":"234","endLine":17,"endColumn":24},{"ruleId":"231","severity":1,"message":"277","line":17,"column":26,"nodeType":"233","messageId":"234","endLine":17,"endColumn":43},{"ruleId":"231","severity":1,"message":"278","line":103,"column":10,"nodeType":"233","messageId":"234","endLine":103,"endColumn":22},{"ruleId":"231","severity":1,"message":"279","line":4,"column":3,"nodeType":"233","messageId":"234","endLine":4,"endColumn":18},{"ruleId":"231","severity":1,"message":"280","line":5,"column":3,"nodeType":"233","messageId":"234","endLine":5,"endColumn":15},{"ruleId":"231","severity":1,"message":"281","line":6,"column":3,"nodeType":"233","messageId":"234","endLine":6,"endColumn":19},"no-unused-vars","'paciente' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["282"],"no-negated-in-lhs",["283"],["282"],["283"],"'formValid' is assigned a value but never used.","'setConfirmLoading' is assigned a value but never used.","'modalText' is assigned a value but never used.","'setModalText' is assigned a value but never used.","'onChangeEstado' is assigned a value but never used.",["282"],["283"],["282"],["283"],["282"],["283"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["282"],["283"],["282"],["283"],["282"],["283"],"'Switch' is defined but never used.","'userActive' is assigned a value but never used.","'user' is assigned a value but never used.","'UserActive' is defined but never used.","'Solicitudes' is defined but never used.","'useEffect' is defined but never used.",["282"],["283"],"'setIsModalVisible' is assigned a value but never used.","'setReloadUser' is assigned a value but never used.","'dataUser' is assigned a value but never used.","'setDataUser' is assigned a value but never used.",["282"],["283"],"'userInactive' is assigned a value but never used.","'viewUserActive' is assigned a value but never used.","'setViewUserActive' is assigned a value but never used.","'UserInactive' is defined but never used.","'SettingOutlined' is defined but never used.","'EditOutlined' is defined but never used.","'EllipsisOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]