[{"/Users/creyesb/Documents/odonbot/client/src/config/routes.js":"1","/Users/creyesb/Documents/odonbot/client/src/components/ListaProfesores/ListaProfesores.js":"2","/Users/creyesb/Documents/odonbot/client/src/components/MenuSiderAdmin/MenuSiderAdmin.js":"3","/Users/creyesb/Documents/odonbot/client/src/components/MenuSiderProfe/MenuSider.js":"4","/Users/creyesb/Documents/odonbot/client/src/layout/LayoutAdmin.js":"5","/Users/creyesb/Documents/odonbot/client/src/pages/HomeAdmin/HomeAdmin.js":"6","/Users/creyesb/Documents/odonbot/client/src/api/user.js":"7","/Users/creyesb/Documents/odonbot/client/src/components/ListaEstudiantes/ListaEstudiante.js":"8","/Users/creyesb/Documents/odonbot/client/src/components/Profesor/Profesor.js":"9","/Users/creyesb/Documents/odonbot/client/src/components/Solicitudes/Solicitudes.js":"10","/Users/creyesb/Documents/odonbot/client/src/components/MenuTop/MenuTop.js":"11","/Users/creyesb/Documents/odonbot/client/src/components/ShowUserInfo/ShowUserInfo.js":"12","/Users/creyesb/Documents/odonbot/client/src/App.js":"13","/Users/creyesb/Documents/odonbot/client/src/layout/LayoutEstudiante.js":"14","/Users/creyesb/Documents/odonbot/client/src/pages/EstudiantePage/HomeEstudiante.js":"15","/Users/creyesb/Documents/odonbot/client/src/api/auth.js":"16","/Users/creyesb/Documents/odonbot/client/src/components/Estudiante/Estudiante.js":"17","/Users/creyesb/Documents/odonbot/client/src/components/User/User.js":"18","/Users/creyesb/Documents/odonbot/client/src/api/config.js":"19","/Users/creyesb/Documents/odonbot/client/src/api/paciente.js":"20","/Users/creyesb/Documents/odonbot/client/src/components/Chatbot/Chatbot.js":"21","/Users/creyesb/Documents/odonbot/client/src/components/MenuSiderProfe/index.js":"22","/Users/creyesb/Documents/odonbot/client/src/components/PatientPhotoCard/PatientPhotoCard.js":"23","/Users/creyesb/Documents/odonbot/client/src/components/QuickReplies/QuickReply.js":"24","/Users/creyesb/Documents/odonbot/client/src/components/ShowChat/ShowChat.js":"25","/Users/creyesb/Documents/odonbot/client/src/index.js":"26","/Users/creyesb/Documents/odonbot/client/src/pages/Error.js":"27","/Users/creyesb/Documents/odonbot/client/src/pages/Chat/Chat.js":"28","/Users/creyesb/Documents/odonbot/client/src/components/LogInForm/LogInForm.js":"29","/Users/creyesb/Documents/odonbot/client/src/components/Paciente/Paciente.js":"30","/Users/creyesb/Documents/odonbot/client/src/hooks/useAuth.js":"31","/Users/creyesb/Documents/odonbot/client/src/utils/constants.js":"32","/Users/creyesb/Documents/odonbot/client/src/utils/formValidation.js":"33","/Users/creyesb/Documents/odonbot/client/src/components/FormularioPaciente/FormularioPaciente.js":"34","/Users/creyesb/Documents/odonbot/client/src/components/MenuSider/index.js":"35","/Users/creyesb/Documents/odonbot/client/src/components/FormularioEditarUser/FormEditUser.js":"36","/Users/creyesb/Documents/odonbot/client/src/components/MenuSider/MenuSider.js":"37","/Users/creyesb/Documents/odonbot/client/src/providers/AuthProviders.js":"38","/Users/creyesb/Documents/odonbot/client/src/layout/LayoutProfesor.js":"39","/Users/creyesb/Documents/odonbot/client/src/components/RegistroPage/Registro.js":"40","/Users/creyesb/Documents/odonbot/client/src/components/ListaPaciente/ListaPaciente.js":"41","/Users/creyesb/Documents/odonbot/client/src/components/QuickReplies/QuickReplies.js":"42","/Users/creyesb/Documents/odonbot/client/src/components/FormularioEditarPaciente/FormEditPaciente.js":"43","/Users/creyesb/Documents/odonbot/client/src/api/chat.js":"44","/Users/creyesb/Documents/odonbot/client/src/components/Chatbot/Message.js":"45","/Users/creyesb/Documents/odonbot/client/src/components/PerfilEstudiante/PerfilEstudiante.js":"46","/Users/creyesb/Documents/odonbot/client/src/layout/LayoutBasic.js":"47","/Users/creyesb/Documents/odonbot/client/src/components/MenuTop/index.js":"48","/Users/creyesb/Documents/odonbot/client/src/components/ModalForm/ModalForm.js":"49","/Users/creyesb/Documents/odonbot/client/src/pages/ProfesorPage/HomeProfesor.js":"50","/Users/creyesb/Documents/odonbot/client/src/components/ButtonGridProfesor/ButtonGridProfesor.js":"51","/Users/creyesb/Documents/odonbot/client/src/components/ButtonGridEstudiante/ButtonGrisEstudiante.js":"52","/Users/creyesb/Documents/odonbot/client/src/reportWebVitals.js":"53","/Users/creyesb/Documents/odonbot/client/src/components/ButtonGridAdmin/ButtonGridAdmin.js":"54"},{"size":3461,"mtime":1622155272984,"results":"55","hashOfConfig":"56"},{"size":3999,"mtime":1621915899058,"results":"57","hashOfConfig":"56"},{"size":1985,"mtime":1622325602016,"results":"58","hashOfConfig":"56"},{"size":2211,"mtime":1622325624837,"results":"59","hashOfConfig":"56"},{"size":2008,"mtime":1622311720716,"results":"60","hashOfConfig":"56"},{"size":612,"mtime":1622410378495,"results":"61","hashOfConfig":"56"},{"size":4264,"mtime":1621785540179,"results":"62","hashOfConfig":"56"},{"size":4015,"mtime":1621489835074,"results":"63","hashOfConfig":"56"},{"size":924,"mtime":1621480627884,"results":"64","hashOfConfig":"56"},{"size":3781,"mtime":1621489444608,"results":"65","hashOfConfig":"56"},{"size":1543,"mtime":1621489660178,"results":"66","hashOfConfig":"56"},{"size":745,"mtime":1621490418777,"results":"67","hashOfConfig":"56"},{"size":851,"mtime":1622309548376,"results":"68","hashOfConfig":"56"},{"size":1999,"mtime":1622311710552,"results":"69","hashOfConfig":"56"},{"size":1044,"mtime":1622324838784,"results":"70","hashOfConfig":"56"},{"size":1815,"mtime":1608939644584,"results":"71","hashOfConfig":"56"},{"size":949,"mtime":1614911115781,"results":"72","hashOfConfig":"56"},{"size":1114,"mtime":1618892785299,"results":"73","hashOfConfig":"56"},{"size":143,"mtime":1622258585753,"results":"74","hashOfConfig":"56"},{"size":3084,"mtime":1622264697745,"results":"75","hashOfConfig":"56"},{"size":6801,"mtime":1622673061713,"results":"76","hashOfConfig":"56"},{"size":38,"mtime":1609168242053,"results":"77","hashOfConfig":"56"},{"size":750,"mtime":1622666053098,"results":"78","hashOfConfig":"56"},{"size":883,"mtime":1619930787237,"results":"79","hashOfConfig":"56"},{"size":399,"mtime":1621822262901,"results":"80","hashOfConfig":"56"},{"size":478,"mtime":1610749045083,"results":"81","hashOfConfig":"56"},{"size":409,"mtime":1606883209064,"results":"82","hashOfConfig":"56"},{"size":324,"mtime":1617683921833,"results":"83","hashOfConfig":"56"},{"size":2958,"mtime":1621205150286,"results":"84","hashOfConfig":"56"},{"size":1271,"mtime":1614830226400,"results":"85","hashOfConfig":"56"},{"size":141,"mtime":1608938193448,"results":"86","hashOfConfig":"56"},{"size":87,"mtime":1608877095624,"results":"87","hashOfConfig":"56"},{"size":851,"mtime":1613169936324,"results":"88","hashOfConfig":"56"},{"size":6141,"mtime":1613170187346,"results":"89","hashOfConfig":"56"},{"size":38,"mtime":1606883840043,"results":"90","hashOfConfig":"56"},{"size":3632,"mtime":1618884860724,"results":"91","hashOfConfig":"56"},{"size":1485,"mtime":1622312908647,"results":"92","hashOfConfig":"56"},{"size":981,"mtime":1613271098118,"results":"93","hashOfConfig":"56"},{"size":2000,"mtime":1622311726152,"results":"94","hashOfConfig":"56"},{"size":6657,"mtime":1613169866090,"results":"95","hashOfConfig":"56"},{"size":7585,"mtime":1618893484620,"results":"96","hashOfConfig":"56"},{"size":1486,"mtime":1622677375113,"results":"97","hashOfConfig":"56"},{"size":6216,"mtime":1618264773907,"results":"98","hashOfConfig":"56"},{"size":1136,"mtime":1621723628918,"results":"99","hashOfConfig":"56"},{"size":1187,"mtime":1622675728386,"results":"100","hashOfConfig":"56"},{"size":4174,"mtime":1621824995575,"results":"101","hashOfConfig":"56"},{"size":996,"mtime":1606886503960,"results":"102","hashOfConfig":"56"},{"size":36,"mtime":1606883819423,"results":"103","hashOfConfig":"56"},{"size":382,"mtime":1618264628781,"results":"104","hashOfConfig":"56"},{"size":645,"mtime":1621144941154,"results":"105","hashOfConfig":"56"},{"size":1677,"mtime":1622409791839,"results":"106","hashOfConfig":"56"},{"size":1103,"mtime":1622323135694,"results":"107","hashOfConfig":"56"},{"size":362,"mtime":1606708851546,"results":"108","hashOfConfig":"56"},{"size":1465,"mtime":1622410593527,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"156llia",{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"125"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"119"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"135"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"128"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"119"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"119"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/creyesb/Documents/odonbot/client/src/config/routes.js",[],["241","242"],"/Users/creyesb/Documents/odonbot/client/src/components/ListaProfesores/ListaProfesores.js",["243","244","245"],"import React, { useState, useEffect } from \"react\";\nimport { List, Avatar, Button, Modal, notification } from \"antd\";\nimport \"./ListaProfesores.scss\";\nimport {\n  InfoCircleOutlined,\n  EditOutlined,\n  DeleteOutlined,\n} from \"@ant-design/icons\";\nimport { getUserAPI, deleteUserAPI } from \"../../api/user\";\nimport ModalForm from \"../ModalForm/ModalForm\";\nimport ShowUserInfo from \"../ShowUserInfo/ShowUserInfo\";\nimport FormularioEditarUser from \"../FormularioEditarUser/FormEditUser\";\nconst { confirm } = Modal;\n\nexport default function Solicitudes(props) {\n  const { userActive, setReloadUser } = props;\n  const [user, setUser] = useState([]);\n\n  const [viewUserActive, setViewUserActive] = useState(true);\n  /* Para mostrar los pacientes activos/inactivos*/\n  //Estados para el modal\n  /*Estado para mostrar/ocultar estado */\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  /* texto del titulo del modal ej: nombre del paciente*/\n  const [modalTitle, setModalTitle] = useState(\"\");\n  /* Estado para el contenido del modal */\n  const [modalContent, setModalContent] = useState(null);\n\n  useEffect(() => {\n    getUserAPI().then((response) => {\n      setUser(response.user);\n    });\n  }, []);\n\n  return (\n    <div className=\"estilo-solicitud\">\n      {\n        <UserActive\n          userActive={userActive}\n          isModalVisible={isModalVisible}\n          setModalContent={setModalContent}\n          setModalTitle={setModalTitle}\n          setIsModalVisible={setIsModalVisible}\n          setReloadUser={setReloadUser}\n        />\n      }\n      <ModalForm\n        title={modalTitle}\n        isVisible={isModalVisible}\n        setIsVisible={setIsModalVisible}\n      >\n        {modalContent}\n      </ModalForm>\n    </div>\n  );\n}\n\nfunction UserActive(props) {\n  const {\n    userActive,\n    setModalContent,\n    setModalTitle,\n    setIsModalVisible,\n    setReloadUser,\n  } = props;\n\n  const viewData = (user) => {\n    setIsModalVisible(true);\n    setModalTitle(\"\");\n    setModalContent(<ShowUserInfo user={user} />);\n  };\n  const editData = (user) => {\n    setIsModalVisible(true);\n    setModalTitle(\"Editar Profesor\");\n    setModalContent(\n      <FormularioEditarUser\n        user={user}\n        setIsModalVisible={setIsModalVisible}\n        setReloadUser={setReloadUser}\n      />\n    );\n  };\n  const showDeleteConfirm = (user) => {\n    confirm({\n      title: \"Eliminar Usuario\",\n      content: `Estas seguro que quieres eliminar a ${user.nombre +\n        \" \" +\n        user.apellidoP +\n        \" \" +\n        user.apellidoM}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n      onOk() {\n        deleteUserAPI(user._id)\n          .then((response) => {\n            notification[\"success\"]({\n              message: response,\n            });\n            setReloadUser(true);\n          })\n          .catch((err) => {\n            notification[\"error\"]({\n              message: err.message,\n            });\n          });\n      },\n    });\n  };\n  return (\n    <List\n      className=\"user-active\"\n      itemLayout=\"horizontal\"\n      dataSource={userActive}\n      renderItem={(item) => (\n        <List.Item\n          actions={[\n            <Button\n              icon={<EditOutlined />}\n              type=\"dashed\"\n              onClick={() => editData(item)}\n            ></Button>,\n\n            <Button\n              icon={<InfoCircleOutlined />}\n              type=\"primary\"\n              onClick={() => viewData(item)}\n            ></Button>,\n            <Button\n              icon={<DeleteOutlined />}\n              type=\"danger\"\n              onClick={() => showDeleteConfirm(item)}\n            ></Button>,\n          ]}\n        >\n          <List.Item.Meta\n            avatar={\n              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n            }\n            title={item.nombre + \" \" + item.apellidoP + \" \" + item.apellidoM}\n            description={item.email}\n          />\n        </List.Item>\n      )}\n    />\n  );\n}\n",["246","247"],"/Users/creyesb/Documents/odonbot/client/src/components/MenuSiderAdmin/MenuSiderAdmin.js",[],["248","249"],"/Users/creyesb/Documents/odonbot/client/src/components/MenuSiderProfe/MenuSider.js",[],["250","251"],"/Users/creyesb/Documents/odonbot/client/src/layout/LayoutAdmin.js",[],["252","253"],"/Users/creyesb/Documents/odonbot/client/src/pages/HomeAdmin/HomeAdmin.js",[],["254","255"],"/Users/creyesb/Documents/odonbot/client/src/api/user.js",[],["256","257"],"/Users/creyesb/Documents/odonbot/client/src/components/ListaEstudiantes/ListaEstudiante.js",["258","259","260","261"],"import React, { useState, useEffect } from \"react\";\nimport { List, Avatar, Button, Modal, notification } from \"antd\";\nimport \"./ListaEstudiante.scss\";\nimport {\n  InfoCircleOutlined,\n  EditOutlined,\n  DeleteOutlined,\n} from \"@ant-design/icons\";\nimport { getUserAPI, deleteUserAPI } from \"../../api/user\";\nimport ModalForm from \"../ModalForm/ModalForm\";\nimport ShowUserInfo from \"../ShowUserInfo/ShowUserInfo\";\nimport FormularioEditarUser from \"../FormularioEditarUser/FormEditUser\";\nconst { confirm } = Modal;\n\nexport default function Solicitudes(props) {\n  const { userActive, userInactive, setReloadUser } = props;\n  const [user, setUser] = useState([]);\n\n  const [viewUserActive, setViewUserActive] = useState(true);\n  /* Para mostrar los pacientes activos/inactivos*/\n  //Estados para el modal\n  /*Estado para mostrar/ocultar estado */\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  /* texto del titulo del modal ej: nombre del paciente*/\n  const [modalTitle, setModalTitle] = useState(\"\");\n  /* Estado para el contenido del modal */\n  const [modalContent, setModalContent] = useState(null);\n\n  useEffect(() => {\n    getUserAPI().then((response) => {\n      setUser(response.user);\n    });\n  }, []);\n\n  return (\n    <div className=\"estilo-solicitud\">\n      {\n        <UserActive\n          userActive={userActive}\n          isModalVisible={isModalVisible}\n          setModalContent={setModalContent}\n          setModalTitle={setModalTitle}\n          setIsModalVisible={setIsModalVisible}\n          setReloadUser={setReloadUser}\n        />\n      }\n      <ModalForm\n        title={modalTitle}\n        isVisible={isModalVisible}\n        setIsVisible={setIsModalVisible}\n      >\n        {modalContent}\n      </ModalForm>\n    </div>\n  );\n}\n\nfunction UserActive(props) {\n  const {\n    userActive,\n    setModalContent,\n    setModalTitle,\n    setIsModalVisible,\n    setReloadUser,\n  } = props;\n\n  const viewData = (user) => {\n    setIsModalVisible(true);\n    setModalTitle(\"\");\n    setModalContent(<ShowUserInfo user={user} />);\n  };\n  const editData = (user) => {\n    setIsModalVisible(true);\n    setModalTitle(\"Editar estudiante\");\n    setModalContent(\n      <FormularioEditarUser\n        user={user}\n        setIsModalVisible={setIsModalVisible}\n        setReloadUser={setReloadUser}\n      />\n    );\n  };\n  const showDeleteConfirm = (user) => {\n    confirm({\n      title: \"Eliminar Usuario\",\n      content: `Estas seguro que quieres eliminar a ${user.nombre +\n        \" \" +\n        user.apellidoP +\n        \" \" +\n        user.apellidoM}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n      onOk() {\n        deleteUserAPI(user._id)\n          .then((response) => {\n            notification[\"success\"]({\n              message: response,\n            });\n            setReloadUser(true);\n          })\n          .catch((err) => {\n            notification[\"error\"]({\n              message: err.message,\n            });\n          });\n      },\n    });\n  };\n  return (\n    <List\n      className=\"user-active\"\n      itemLayout=\"horizontal\"\n      dataSource={userActive}\n      renderItem={(item) => (\n        <List.Item\n          actions={[\n            <Button\n              icon={<EditOutlined />}\n              type=\"dashed\"\n              onClick={() => editData(item)}\n            ></Button>,\n\n            <Button\n              icon={<InfoCircleOutlined />}\n              type=\"primary\"\n              onClick={() => viewData(item)}\n            ></Button>,\n            <Button\n              icon={<DeleteOutlined />}\n              type=\"danger\"\n              onClick={() => showDeleteConfirm(item)}\n            ></Button>,\n          ]}\n        >\n          <List.Item.Meta\n            avatar={\n              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n            }\n            title={item.nombre + \" \" + item.apellidoP + \" \" + item.apellidoM}\n            description={item.email}\n          />\n        </List.Item>\n      )}\n    />\n  );\n}\n",["262","263"],"/Users/creyesb/Documents/odonbot/client/src/components/Profesor/Profesor.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/Solicitudes/Solicitudes.js",["264"],"import React, { useState, useEffect } from \"react\";\nimport { List, Avatar, Button, notification, Modal } from \"antd\";\nimport \"./Solicitudes.scss\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport { getUserAPI, activateUserAPI, deleteUserAPI } from \"../../api/user\";\nconst { confirm } = Modal;\n\n/*\nimport ModalForm from \"../ModalForm/ModalForm\";\nimport FormEditUser from \"../FormularioEditarUser/FormEditUser\";*/\n\nexport default function Solicitudes(props) {\n  const { userInactive, setReloadUser } = props;\n\n  const [user, setUser] = useState([]);\n\n  //const [viewUserActive, setViewUserActive] = useState(true);\n  /* Para mostrar los pacientes activos/inactivos*/\n  //Estados para el modal\n  /*Estado para mostrar/ocultar estado */\n  //const [isModalVisible, setIsModalVisible] = useState(false);\n  /* texto del titulo del modal ej: nombre del paciente*/\n  //const [modalTitle, setModalTitle] = useState(\"\");\n  /* Estado para el contenido del modal */\n  //const [modalContent, setModalContent] = useState(null);\n\n  useEffect(() => {\n    getUserAPI().then((response) => {\n      setUser(response.user);\n    });\n  }, []);\n\n  return (\n    <div className=\"estilo-solicitud\">\n      <div className=\"estilo-solicitud__switch\">\n        <span>{\"Registro de estudiantes nuevos.\"}</span>\n      </div>\n\n      {\n        <UserInactive\n          userInactive={userInactive}\n          setReloadUser={setReloadUser}\n        />\n      }\n    </div>\n  );\n}\n\nfunction UserInactive(props) {\n  const { userInactive, setReloadUser } = props;\n  /*\n  const desactivarUser = (user) => {\n    activateUserAPI(user._id, \"false\")\n      .then((response) => {\n        notification[\"success\"]({\n          message: response,\n        });\n        setReloadUser(true);\n      })\n      .catch((err) => {\n        notification[\"error\"]({\n          message: err,\n        });\n      });\n  };*/\n  const activateUser = (user) => {\n    activateUserAPI(user._id, \"true\")\n      .then((response) => {\n        notification[\"success\"]({\n          message: response,\n        });\n        setReloadUser(true);\n      })\n      .catch((err) => {\n        notification[\"error\"]({\n          message: err,\n        });\n      });\n  };\n  const showDeleteConfirm = (user) => {\n    confirm({\n      title: `Rechazar ${user.rol ? \"Profesor\" : \"Estudiante\"}`,\n      content: `Estas seguro que quieres rechazar el registro de: ${user.nombre +\n        \" \" +\n        user.apellidoP +\n        \" \" +\n        user.apellidoM}?`,\n      okText: \"Recahazar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n      onOk() {\n        deleteUserAPI(user._id)\n          .then((response) => {\n            notification[\"success\"]({\n              message: response,\n            });\n            setReloadUser(true);\n          })\n          .catch((err) => {\n            notification[\"error\"]({\n              message: err.message,\n            });\n          });\n      },\n    });\n  };\n  return (\n    <List\n      className=\"user-active\"\n      itemLayout=\"horizontal\"\n      dataSource={userInactive}\n      renderItem={(item) => (\n        <List.Item\n          actions={[\n            <Button\n              icon={<CloseOutlined />}\n              type=\"danger\"\n              onClick={() => showDeleteConfirm(item)}\n            ></Button>,\n\n            <Button\n              icon={<CheckOutlined />}\n              type=\"primary\"\n              onClick={() => activateUser(item)}\n            ></Button>,\n          ]}\n        >\n          <List.Item.Meta\n            avatar={\n              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n            }\n            title={item.nombre + \" \" + item.apellidoP + \" \" + item.apellidoM}\n            description={item.email}\n          />\n        </List.Item>\n      )}\n    />\n  );\n}\n","/Users/creyesb/Documents/odonbot/client/src/components/MenuTop/MenuTop.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/ShowUserInfo/ShowUserInfo.js",["265","266"],"import React, { useState } from \"react\";\nimport { Descriptions } from \"antd\";\nimport { getUserAPI } from \"../../api/user\";\nexport default function ShowUserInfo(props) {\n  const { user } = props;\n\n  return (\n    <div>\n      <Descriptions title=\"Informacion de Usuario\" bordered={true} column={1}>\n        <Descriptions.Item label=\"Nombre\">\n          {user.nombre + \" \" + user.apellidoP + \" \" + user.apellidoM}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Correo\">{user.email}</Descriptions.Item>\n        <Descriptions.Item label=\"Rut\">{user.rut}</Descriptions.Item>\n        <Descriptions.Item label=\"Estado\">\n          {user.usrState ? \"Activo\" : \"Inactivo\"}\n        </Descriptions.Item>\n      </Descriptions>\n    </div>\n  );\n}\n","/Users/creyesb/Documents/odonbot/client/src/App.js",[],"/Users/creyesb/Documents/odonbot/client/src/layout/LayoutEstudiante.js",["267"],"import React, { useState } from \"react\";\nimport { Layout } from \"antd\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport MenuSider from \"../components/MenuSider\";\nimport MenuTop from \"../components/MenuTop\";\nimport useAuth from \"../hooks/useAuth\";\nimport \"./LayoutEstudiante.scss\";\nimport LogInForm from \"../components/LogInForm/LogInForm\";\n//import MainLogin from \"../pages/MainLogin\";\n\nexport default function LayoutEstudiante(props) {\n  const { routes } = props;\n  const [menuCollapsed, setMenuCollapsed] = useState(true);\n  const { Header, Footer, Content } = Layout;\n  //Open & close Sider menu\n\n  const { user, isLoading } = useAuth();\n\n  if (!user && !isLoading) {\n    return (\n      <>\n        <Route path=\"/\" component={LogInForm} />\n        <Redirect to=\"/\" />\n      </>\n    );\n  }\n\n  if (user && !isLoading) {\n    return (\n      <Layout>\n        <MenuSider menuCollapsed={menuCollapsed} />\n        <Layout\n          className=\"layout-admin\"\n          style={{\n            marginLeft: menuCollapsed ? \"10px\" : \"200px\",\n            zIndex: 999,\n          }}\n        >\n          <Header className=\"layout-admin__header\">\n            <MenuTop\n              menuCollapsed={menuCollapsed}\n              setMenuCollapsed={setMenuCollapsed}\n            />\n          </Header>\n          <Content className=\"layout-admin__content\">\n            <LoadRoutes routes={routes} />\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n\n  return null;\n}\n\nfunction LoadRoutes({ routes }) {\n  const { user } = useAuth();\n  if (user.rol === 0) {\n    return (\n      <Switch>\n        {routes.map((route, index) => (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={route.component}\n          />\n        ))}\n      </Switch>\n    );\n  } else if (user.rol === 1) {\n    return <Redirect to=\"/profesor\" />;\n  } else if (user.rol === 2) {\n    return <Redirect to=\"/admin\" />;\n  } else {\n    return null;\n  }\n}\n","/Users/creyesb/Documents/odonbot/client/src/pages/EstudiantePage/HomeEstudiante.js",["268","269","270"],"/Users/creyesb/Documents/odonbot/client/src/api/auth.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/Estudiante/Estudiante.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/User/User.js",["271","272"],"import { Typography, notification } from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./User.scss\";\nimport Solicitudes from \"../../components/Solicitudes/Solicitudes\";\nimport { getUserByState, updateUserAPI } from \"../../api/user\";\n\nfunction ActiveInactive() {\n  const [userActive, setUserActive] = useState([]);\n  const [userInactive, setUserInactive] = useState([]);\n  const [reloadUser, setReloadUser] = useState(false);\n\n  useEffect(() => {\n    getUserByState(true).then((response) => {\n      setUserActive(response.user);\n    });\n    setReloadUser(false);\n    getUserByState(false).then((response) => {\n      setUserInactive(response.user);\n    });\n    setReloadUser(false);\n  }, [reloadUser]);\n\n  return (\n    <div className=\"paciente\">\n      <Typography className=\"paciente__typo\">Solicitud de registro</Typography>\n\n      <div className=\"paciente__formlist\">\n        <br></br>\n        <Solicitudes\n          userActive={userActive}\n          userInactive={userInactive}\n          setReloadUser={setReloadUser}\n        />\n      </div>\n    </div>\n  );\n}\nexport default ActiveInactive;\n","/Users/creyesb/Documents/odonbot/client/src/api/config.js",[],"/Users/creyesb/Documents/odonbot/client/src/api/paciente.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/Chatbot/Chatbot.js",["273"],"/Users/creyesb/Documents/odonbot/client/src/components/MenuSiderProfe/index.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/PatientPhotoCard/PatientPhotoCard.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/QuickReplies/QuickReply.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/ShowChat/ShowChat.js",["274"],"import React, { useEffect, useState } from \"react\";\nimport { Typography } from \"antd\";\nimport { findChatsAPI } from \"../../api/chat\";\nconst { Title } = Typography;\n\nexport default function ShowChat() {\n  useEffect(() => {\n    findChatsAPI().then((response) => {\n      console.log(response.chat);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Title level={4}>Evaluación 1</Title>\n    </div>\n  );\n}\n","/Users/creyesb/Documents/odonbot/client/src/index.js",[],["275","276"],"/Users/creyesb/Documents/odonbot/client/src/pages/Error.js",[],"/Users/creyesb/Documents/odonbot/client/src/pages/Chat/Chat.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/LogInForm/LogInForm.js",[],["277","278"],"/Users/creyesb/Documents/odonbot/client/src/components/Paciente/Paciente.js",[],"/Users/creyesb/Documents/odonbot/client/src/hooks/useAuth.js",["279"],"import { useContext } from \"react\";\nimport { AuthContext } from \"../providers/AuthProviders\";\n\nexport default () => useContext(AuthContext);\n","/Users/creyesb/Documents/odonbot/client/src/utils/constants.js",[],"/Users/creyesb/Documents/odonbot/client/src/utils/formValidation.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/FormularioPaciente/FormularioPaciente.js",["280","281","282","283","284"],"import React, { useState } from \"react\";\nimport { Button, Form, Input, notification, Modal, Radio } from \"antd\";\nimport {\n  UserOutlined,\n  IdcardOutlined,\n  UserAddOutlined,\n} from \"@ant-design/icons\";\n\nimport { crearPaciente } from \"../../api/paciente\";\nimport \"./FormularioPaciente.scss\";\n\nconst { TextArea } = Input;\n\nfunction FormularioPacinte() {\n  const [inputs, setInputs] = useState({\n    nombrePaciente: \"\",\n    edad: \"\",\n    peso: \"\",\n    sintomas: \"\",\n    motivoConsulta: \"\",\n    enfermedadBase: \"\",\n    habitos: \"\",\n    pacienteState: \"\",\n  });\n\n  const [formValid, setFormValid] = useState({\n    nombrePaciente: false,\n    edad: false,\n    peso: false,\n    sintomas: false,\n    motivoConsulta: false,\n    enfermedadBase: false,\n    habitos: false,\n    pacienteState: false,\n  });\n\n  const changeForm = (e) => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const register = async (e) => {\n    const result = await crearPaciente(inputs);\n    if (!result.ok) {\n      notification[\"success\"]({\n        message: result.message,\n      });\n      resetForm();\n    } else {\n      notification[\"error\"]({\n        message: result.message,\n      });\n    }\n  };\n\n  const [visible, setVisible] = React.useState(false);\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const [modalText, setModalText] = React.useState(\"\");\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleCancel = () => {\n    console.log(\"Cancelando\");\n    setVisible(false);\n  };\n  const onChangeEstado = (value) => {\n    console.log(value);\n  };\n\n  const resetForm = () => {\n    const inputs = document.getElementsByTagName(\"input\");\n    for (let i = 0; i < inputs.length; i++) {\n      inputs[i].classList.remove(\"success\");\n      inputs[i].classList.remove(\"error\");\n    }\n\n    setInputs({\n      nombrePaciente: \"\",\n      edad: \"\",\n      peso: \"\",\n      sintomas: \"\",\n      motivoConsulta: \"\",\n      enfermedadBase: \"\",\n      habitos: \"\",\n      pacienteState: \"\",\n    });\n    setFormValid({\n      nombrePaciente: false,\n      edad: false,\n      peso: false,\n      sintomas: false,\n      motivoConsulta: false,\n      enfermedadBase: false,\n      habitos: false,\n      pacienteState: false,\n    });\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"paciente__addButton\">\n        <Button\n          type=\"primary\"\n          shape=\"round\"\n          icon={<UserAddOutlined />}\n          onClick={showModal}\n          className=\"paciente__addButton__button\"\n        />\n      </div>\n\n      <Modal\n        title=\"Nuevo paciente virtual\"\n        visible={visible}\n        onOk={register}\n        confirmLoading={confirmLoading}\n        onCancel={handleCancel}\n        okText=\"Crear\"\n        cancelText=\"Cancelar\"\n      >\n        <Form\n          className=\"registerForm\"\n          onChange={changeForm}\n          onFinish={register}\n        >\n          <Form.Item>\n            <label>Nombre Paciente</label>\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"nombrePaciente\"\n              placeholder=\"Ingrese nombre del paciente\"\n              className=\"register-form__input\"\n              value={inputs.nombrePaciente}\n            />\n          </Form.Item>\n          <Form.Item>\n            <label>Edad</label>\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"edad\"\n              placeholder=\"Ingrese edad del paciente\"\n              className=\"register-form__input\"\n              value={inputs.edad}\n            />\n          </Form.Item>\n          <Form.Item>\n            <label>Peso</label>\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"peso\"\n              placeholder=\"Ingrese peso del paciente\"\n              className=\"register-form__input\"\n              value={inputs.peso}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <label>Motivo Consulta</label>\n            <Input\n              prefix={<IdcardOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"motivoConsulta\"\n              placeholder=\"Ingrese motivo de consulta\"\n              className=\"register-form__input\"\n              value={inputs.motivoConsulta}\n            />\n          </Form.Item>\n          <Form.Item>\n            <label>Sintomas</label>\n            <TextArea\n              rows={2}\n              prefix={<IdcardOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"sintomas\"\n              placeholder=\"Ingrese sintomas\"\n              className=\"register-form__input\"\n              value={inputs.sintomas}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <label>Enfermedades Base</label>\n            <TextArea\n              rows={2}\n              prefix={<IdcardOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"enfermedadBase\"\n              placeholder=\"Ingrese enfermedades base\"\n              className=\"register-form__input\"\n              value={inputs.enfermedadBase}\n            />\n          </Form.Item>\n          <Form.Item>\n            <label>Hábitos</label>\n            <TextArea\n              rows={2}\n              prefix={<IdcardOutlined className=\"site-form-item-icon\" />}\n              type=\"text\"\n              name=\"habitos\"\n              placeholder=\"Ingrese hábitos\"\n              className=\"register-form__input\"\n              value={inputs.habitos}\n            />\n          </Form.Item>\n          <Form.Item>\n            <label>Estado paciente</label>\n            <br></br>\n\n            <Radio.Group\n              value={inputs.pacienteState}\n              type=\"number\"\n              name=\"pacienteState\"\n            >\n              <Radio value={0}>Activo</Radio>\n              <Radio value={1}>Inactivo</Radio>\n            </Radio.Group>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default FormularioPacinte;\n","/Users/creyesb/Documents/odonbot/client/src/components/MenuSider/index.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/FormularioEditarUser/FormEditUser.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/MenuSider/MenuSider.js",["285"],"import React from \"react\";\n\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport { Layout, Menu } from \"antd\";\n\nimport {\n  HomeOutlined,\n  MenuOutlined,\n  UserOutlined,\n  MessageOutlined,\n  BookOutlined,\n} from \"@ant-design/icons\";\n\nimport \"./MenuSider.scss\";\n\nfunction MenuSider(props) {\n  const { menuCollapsed, location } = props;\n  const { Sider } = Layout;\n  return (\n    <Sider\n      className=\"estudiante-sider\"\n      collapsed={menuCollapsed}\n      theme=\"light\"\n      collapsedWidth={0}\n    >\n      <Menu mode=\"inline\" defaultSelectedKeys={[location.pathname]}>\n        <Menu.Item key=\"/estudiante\">\n          <Link to={\"/estudiante\"}>\n            <HomeOutlined />\n            <span className=\"nav-text\">Incio</span>\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"/estudiante/show-chat\">\n          <Link to={\"/estudiante/show-chat\"}>\n            <BookOutlined />\n            <span className=\"nav-text\">Mis Evaluaciones</span>\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"/estudiante/chat\">\n          <a href={\"/estudiante/chat\"}>\n            <MessageOutlined />\n            <span className=\"nav-text\">Chat</span>\n          </a>\n        </Menu.Item>\n        <Menu.Item key=\"/estudiante/perfil\">\n          <Link to={\"/estudiante/perfil\"}>\n            <UserOutlined />\n            <span className=\"nav-text\">Mi Perfil</span>\n          </Link>\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  );\n}\n\nexport default withRouter(MenuSider);\n","/Users/creyesb/Documents/odonbot/client/src/providers/AuthProviders.js",[],"/Users/creyesb/Documents/odonbot/client/src/layout/LayoutProfesor.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/RegistroPage/Registro.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/ListaPaciente/ListaPaciente.js",["286"],"import React, { useState, useEffect } from \"react\";\nimport { List, Avatar, Button, Switch, notification, Modal } from \"antd\";\nimport \"./ListaPaciente.scss\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  UserSwitchOutlined,\n} from \"@ant-design/icons\";\nimport {\n  getPaciente,\n  activatePacienteAPI,\n  deletePacienteAPI,\n} from \"../../api/paciente\";\nimport ModalForm from \"../ModalForm/ModalForm\";\nimport FormEditPaciente from \"../FormularioEditarPaciente/FormEditPaciente\";\nconst { confirm } = Modal;\n\nexport default function ListaPaciente(props) {\n  const [paciente, setPaciente] = useState([]);\n  const { pacienteActivo, pacienteInactivo, setReloadPaciente } = props;\n  /* Para mostrar los pacientes activos/inactivos*/\n  const [viewPacienteActivo, setViewPacienteActivo] = useState(false);\n  //Estados para el modal\n  /*Estado para mostrar/ocultar estado */\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  /* texto del titulo del modal ej: nombre del paciente*/\n  const [modalTitle, setModalTitle] = useState(\"\");\n  /* Estado para el contenido del modal */\n  const [modalContent, setModalContent] = useState(null);\n\n  useEffect(() => {\n    getPaciente().then((response) => {\n      setPaciente(response.paciente);\n    });\n  }, []);\n\n  return (\n    <div className=\"listapaciente\">\n      <div className=\"listapaciente__switch\">\n        <Switch\n          className=\"listapaciente__switchButton\"\n          defaultChecked\n          onChange={() => setViewPacienteActivo(!viewPacienteActivo)}\n        />\n        <span>\n          {viewPacienteActivo ? \"Pacientes Inactivos\" : \"Pacientes Activos \"}\n        </span>\n      </div>\n      {viewPacienteActivo ? (\n        <PacienteActivos\n          pacienteActivo={pacienteActivo}\n          isModalVisible={isModalVisible}\n          setModalContent={setModalContent}\n          setModalTitle={setModalTitle}\n          setIsModalVisible={setIsModalVisible}\n          setReloadPaciente={setReloadPaciente}\n        />\n      ) : (\n        <PacienteInactivos\n          pacienteInactivo={pacienteInactivo}\n          isModalVisible={isModalVisible}\n          setModalContent={setModalContent}\n          setModalTitle={setModalTitle}\n          setIsModalVisible={setIsModalVisible}\n          setReloadPaciente={setReloadPaciente}\n        />\n      )}\n\n      <ModalForm\n        title={modalTitle}\n        isVisible={isModalVisible}\n        setIsVisible={setIsModalVisible}\n      >\n        {modalContent}\n      </ModalForm>\n    </div>\n  );\n}\n\nfunction PacienteActivos(props) {\n  const {\n    pacienteActivo,\n    setModalContent,\n    setModalTitle,\n    setIsModalVisible,\n    setReloadPaciente,\n  } = props;\n\n  const editPaciente = (paciente) => {\n    setIsModalVisible(true);\n    setModalTitle(`Editar ${paciente.nombrePaciente}`);\n    setModalContent(\n      <FormEditPaciente\n        paciente={paciente}\n        setIsModalVisible={setIsModalVisible}\n        setReloadPaciente={setReloadPaciente}\n      />\n    );\n  };\n\n  const desactivarPaciente = (paciente) => {\n    activatePacienteAPI(paciente._id, 1)\n      .then((response) => {\n        notification[\"success\"]({\n          message: response,\n        });\n        setReloadPaciente(true);\n      })\n      .catch((err) => {\n        notification[\"error\"]({\n          message: err,\n        });\n      });\n  };\n\n  const showDeleteConfirm = (paciente) => {\n    confirm({\n      title: \"Eliminar paciente\",\n      content: `Estas seguro que quieres eliminar a ${paciente.nombrePaciente}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n      onOk() {\n        deletePacienteAPI(paciente._id)\n          .then((response) => {\n            notification[\"success\"]({\n              message: response,\n            });\n            setReloadPaciente(true);\n          })\n          .catch((err) => {\n            notification[\"error\"]({\n              message: err.message,\n            });\n          });\n      },\n    });\n  };\n  return (\n    <div>\n      <List\n        className=\"pacienteActivo\"\n        itemLayout=\"horizontal\"\n        dataSource={pacienteActivo}\n        renderItem={(item) => (\n          <List.Item\n            actions={[\n              <Button\n                icon={<UserSwitchOutlined />}\n                type=\"dashed\"\n                onClick={() => desactivarPaciente(item)}\n              ></Button>,\n              <Button\n                icon={<EditOutlined />}\n                type=\"primary\"\n                onClick={() => editPaciente(item)}\n              ></Button>,\n              <Button\n                icon={<DeleteOutlined />}\n                type=\"danger\"\n                onClick={() => showDeleteConfirm(item)}\n              ></Button>,\n            ]}\n          >\n            <List.Item.Meta\n              avatar={\n                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n              }\n              title={item.nombrePaciente}\n              description={item.sintomas}\n            />\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n}\nfunction PacienteInactivos(props) {\n  const {\n    pacienteInactivo,\n    setModalContent,\n    setModalTitle,\n    setIsModalVisible,\n    setReloadPaciente,\n  } = props;\n\n  const editPaciente = (paciente) => {\n    setIsModalVisible(true);\n    setModalTitle(`Editar ${paciente.nombrePaciente}`);\n    setModalContent(\n      <FormEditPaciente\n        paciente={paciente}\n        setIsModalVisible={setIsModalVisible}\n        setReloadPaciente={setReloadPaciente}\n      />\n    );\n    console.log({ paciente });\n  };\n\n  const activarPaciente = (paciente) => {\n    activatePacienteAPI(paciente._id, 0)\n      .then((response) => {\n        notification[\"success\"]({\n          message: response,\n        });\n        setReloadPaciente(true);\n      })\n      .catch((err) => {\n        notification[\"error\"]({\n          message: err,\n        });\n      });\n  };\n  const showDeleteConfirm = (paciente) => {\n    confirm({\n      title: \"Eliminar paciente\",\n      content: `Estas seguro que quieres eliminar a ${paciente.nombrePaciente}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n      onOk() {\n        deletePacienteAPI(paciente._id)\n          .then((response) => {\n            notification[\"success\"]({\n              message: response,\n            });\n            setReloadPaciente(true);\n          })\n          .catch((err) => {\n            notification[\"error\"]({\n              message: err.message,\n            });\n          });\n      },\n    });\n  };\n  return (\n    <div>\n      <List\n        className=\"pacienteActivo\"\n        itemLayout=\"horizontal\"\n        dataSource={pacienteInactivo}\n        renderItem={(item) => (\n          <List.Item\n            actions={[\n              <Button\n                icon={<UserSwitchOutlined />}\n                type=\"default\"\n                onClick={() => activarPaciente(item)}\n              ></Button>,\n              <Button\n                icon={<EditOutlined />}\n                type=\"primary\"\n                onClick={() => editPaciente(item)}\n              ></Button>,\n              <Button\n                icon={<DeleteOutlined />}\n                type=\"danger\"\n                onClick={() => showDeleteConfirm(item)}\n              ></Button>,\n            ]}\n          >\n            <List.Item.Meta\n              avatar={\n                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n              }\n              title={item.nombrePaciente}\n              description={item.sintomas}\n            />\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n}\n","/Users/creyesb/Documents/odonbot/client/src/components/QuickReplies/QuickReplies.js",["287"],"/Users/creyesb/Documents/odonbot/client/src/components/FormularioEditarPaciente/FormEditPaciente.js",["288","289"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Form, Select, Col, Row, Input, notification } from \"antd\";\nimport { UserAddOutlined } from \"@ant-design/icons\";\nimport \"./FormEditPaciente.scss\";\nimport { updatePacienteAPI } from \"../../api/paciente\";\nconst { TextArea } = Input;\n\nexport default function FormEditPaciente(props) {\n  const { paciente, setIsModalVisible, setReloadPaciente } = props;\n  const [dataPaciente, setDataPaciente] = useState({\n    nombrePaciente: paciente.nombrePaciente,\n    edad: paciente.edad,\n    peso: paciente.peso,\n    sintomas: paciente.sintomas,\n    motivoConsulta: paciente.motivoConsulta,\n    enfermedadBase: paciente.enfermedadBase,\n    habitos: paciente.habitos,\n    pacienteState: paciente.pacienteState,\n  });\n\n  const updateDataPaciente = () => {\n    const pacienteUpdate = dataPaciente;\n\n    updatePacienteAPI(pacienteUpdate, paciente._id).then((result) => {\n      notification[\"success\"]({\n        message: result.message,\n      });\n    });\n    setIsModalVisible(false);\n    setReloadPaciente(true);\n  };\n\n  return (\n    <div>\n      <EditForm\n        paciente={paciente}\n        dataPaciente={dataPaciente}\n        setDataPaciente={setDataPaciente}\n        updateDataPaciente={updateDataPaciente}\n      />\n    </div>\n  );\n}\n\nfunction EditForm(props) {\n  const { dataPaciente, setDataPaciente, updateDataPaciente, paciente } = props;\n  const { Option } = Select;\n  return (\n    <div>\n      <Form className=\"form-edit\" onFinish={updateDataPaciente}>\n        <Row gutter={24}>\n          <Col span={24}>\n            <Form.Item>\n              <label>Nombre Paciente</label>\n              <Input\n                placeholder=\"Nombre paciente\"\n                value={dataPaciente.nombrePaciente}\n                type=\"text\"\n                name=\"nombrePaciente\"\n                icon={<UserAddOutlined />}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    nombrePaciente: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={24}>\n          <Col span={8}>\n            <Form.Item>\n              <label>Peso</label>\n              <Input\n                placeholder=\"Edad\"\n                value={dataPaciente.peso}\n                type=\"text\"\n                name=\"peso\"\n                icon={<UserAddOutlined />}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    peso: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item>\n              <label>Edad</label>\n              <Input\n                value={dataPaciente.edad}\n                type=\"text\"\n                name=\"edad\"\n                icon={<UserAddOutlined />}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    edad: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <label>Estado</label>\n            <Select\n              placeholder=\"Estado\"\n              onChange={(e) =>\n                setDataPaciente({ ...dataPaciente, pacienteState: e })\n              }\n              value={dataPaciente.pacienteState ? \"Activo\" : \"Inactivo\"}\n            >\n              <Option value=\"1\">Activo</Option>\n              <Option value=\"0\">Inactivo</Option>\n            </Select>\n          </Col>\n        </Row>\n\n        <Row gutter={24}>\n          <Col span={24}>\n            <Form.Item>\n              <label>Sintomas</label>\n              <TextArea\n                rows={2}\n                icon={<UserAddOutlined />}\n                type=\"text\"\n                name=\"sintomas\"\n                value={dataPaciente.sintomas}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    sintomas: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row gutter={24}>\n          <Col span={24}>\n            <Form.Item>\n              <label>Motivo de Consulta</label>\n              <TextArea\n                rows={2}\n                value={dataPaciente.motivoConsulta}\n                type=\"text\"\n                name=\"motivoConsulta\"\n                icon={<UserAddOutlined />}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    motivoConsulta: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={24}>\n          <Col span={24}>\n            <Form.Item>\n              <label>Enfermedad base</label>\n              <TextArea\n                rows={2}\n                placeholder=\"Enfermedad base\"\n                value={dataPaciente.enfermedadBase}\n                type=\"text\"\n                name=\"enfermedadBase\"\n                icon={<UserAddOutlined />}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    enfermedadBase: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={24}>\n          <Col span={24}>\n            <Form.Item>\n              <label>Hábitos</label>\n              <TextArea\n                rows={2}\n                placeholder=\"hábitos\"\n                value={dataPaciente.habitos}\n                type=\"text\"\n                name=\"habitos\"\n                icon={<UserAddOutlined />}\n                onChange={(e) =>\n                  setDataPaciente({\n                    ...dataPaciente,\n                    habitos: e.target.value,\n                  })\n                }\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Actualizar datos\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","/Users/creyesb/Documents/odonbot/client/src/api/chat.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/Chatbot/Message.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/PerfilEstudiante/PerfilEstudiante.js",[],"/Users/creyesb/Documents/odonbot/client/src/layout/LayoutBasic.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/MenuTop/index.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/ModalForm/ModalForm.js",[],"/Users/creyesb/Documents/odonbot/client/src/pages/ProfesorPage/HomeProfesor.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/ButtonGridProfesor/ButtonGridProfesor.js",[],"/Users/creyesb/Documents/odonbot/client/src/components/ButtonGridEstudiante/ButtonGrisEstudiante.js",[],"/Users/creyesb/Documents/odonbot/client/src/reportWebVitals.js",[],["290","291"],"/Users/creyesb/Documents/odonbot/client/src/components/ButtonGridAdmin/ButtonGridAdmin.js",[],{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":17,"column":10,"nodeType":"298","messageId":"299","endLine":17,"endColumn":14},{"ruleId":"296","severity":1,"message":"300","line":19,"column":10,"nodeType":"298","messageId":"299","endLine":19,"endColumn":24},{"ruleId":"296","severity":1,"message":"301","line":19,"column":26,"nodeType":"298","messageId":"299","endLine":19,"endColumn":43},{"ruleId":"292","replacedBy":"302"},{"ruleId":"294","replacedBy":"303"},{"ruleId":"292","replacedBy":"304"},{"ruleId":"294","replacedBy":"305"},{"ruleId":"292","replacedBy":"306"},{"ruleId":"294","replacedBy":"307"},{"ruleId":"292","replacedBy":"308"},{"ruleId":"294","replacedBy":"309"},{"ruleId":"292","replacedBy":"310"},{"ruleId":"294","replacedBy":"311"},{"ruleId":"292","replacedBy":"312"},{"ruleId":"294","replacedBy":"313"},{"ruleId":"296","severity":1,"message":"314","line":16,"column":23,"nodeType":"298","messageId":"299","endLine":16,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":17,"column":10,"nodeType":"298","messageId":"299","endLine":17,"endColumn":14},{"ruleId":"296","severity":1,"message":"300","line":19,"column":10,"nodeType":"298","messageId":"299","endLine":19,"endColumn":24},{"ruleId":"296","severity":1,"message":"301","line":19,"column":26,"nodeType":"298","messageId":"299","endLine":19,"endColumn":43},{"ruleId":"292","replacedBy":"315"},{"ruleId":"294","replacedBy":"316"},{"ruleId":"296","severity":1,"message":"297","line":15,"column":10,"nodeType":"298","messageId":"299","endLine":15,"endColumn":14},{"ruleId":"296","severity":1,"message":"317","line":1,"column":17,"nodeType":"298","messageId":"299","endLine":1,"endColumn":25},{"ruleId":"296","severity":1,"message":"318","line":3,"column":10,"nodeType":"298","messageId":"299","endLine":3,"endColumn":20},{"ruleId":"296","severity":1,"message":"319","line":14,"column":19,"nodeType":"298","messageId":"299","endLine":14,"endColumn":25},{"ruleId":"296","severity":1,"message":"320","line":3,"column":20,"nodeType":"298","messageId":"299","endLine":3,"endColumn":25},{"ruleId":"296","severity":1,"message":"321","line":3,"column":27,"nodeType":"298","messageId":"299","endLine":3,"endColumn":33},{"ruleId":"296","severity":1,"message":"322","line":3,"column":35,"nodeType":"298","messageId":"299","endLine":3,"endColumn":42},{"ruleId":"296","severity":1,"message":"323","line":1,"column":22,"nodeType":"298","messageId":"299","endLine":1,"endColumn":34},{"ruleId":"296","severity":1,"message":"324","line":5,"column":26,"nodeType":"298","messageId":"299","endLine":5,"endColumn":39},{"ruleId":"296","severity":1,"message":"325","line":2,"column":34,"nodeType":"298","messageId":"299","endLine":2,"endColumn":40},{"ruleId":"296","severity":1,"message":"317","line":1,"column":28,"nodeType":"298","messageId":"299","endLine":1,"endColumn":36},{"ruleId":"292","replacedBy":"326"},{"ruleId":"294","replacedBy":"327"},{"ruleId":"292","replacedBy":"328"},{"ruleId":"294","replacedBy":"329"},{"ruleId":"330","severity":1,"message":"331","line":4,"column":1,"nodeType":"332","endLine":4,"endColumn":46},{"ruleId":"296","severity":1,"message":"333","line":26,"column":10,"nodeType":"298","messageId":"299","endLine":26,"endColumn":19},{"ruleId":"296","severity":1,"message":"334","line":59,"column":26,"nodeType":"298","messageId":"299","endLine":59,"endColumn":43},{"ruleId":"296","severity":1,"message":"335","line":60,"column":10,"nodeType":"298","messageId":"299","endLine":60,"endColumn":19},{"ruleId":"296","severity":1,"message":"336","line":60,"column":21,"nodeType":"298","messageId":"299","endLine":60,"endColumn":33},{"ruleId":"296","severity":1,"message":"337","line":70,"column":9,"nodeType":"298","messageId":"299","endLine":70,"endColumn":23},{"ruleId":"296","severity":1,"message":"338","line":9,"column":3,"nodeType":"298","messageId":"299","endLine":9,"endColumn":15},{"ruleId":"296","severity":1,"message":"339","line":19,"column":10,"nodeType":"298","messageId":"299","endLine":19,"endColumn":18},{"ruleId":"296","severity":1,"message":"321","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":16},{"ruleId":"296","severity":1,"message":"340","line":1,"column":27,"nodeType":"298","messageId":"299","endLine":1,"endColumn":36},{"ruleId":"296","severity":1,"message":"339","line":46,"column":62,"nodeType":"298","messageId":"299","endLine":46,"endColumn":70},{"ruleId":"292","replacedBy":"341"},{"ruleId":"294","replacedBy":"342"},"no-native-reassign",["343"],"no-negated-in-lhs",["344"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'viewUserActive' is assigned a value but never used.","'setViewUserActive' is assigned a value but never used.",["343"],["344"],["343"],["344"],["343"],["344"],["343"],["344"],["343"],["344"],["343"],["344"],"'userInactive' is assigned a value but never used.",["343"],["344"],"'useState' is defined but never used.","'getUserAPI' is defined but never used.","'Footer' is assigned a value but never used.","'Steps' is defined but never used.","'Button' is defined but never used.","'message' is defined but never used.","'notification' is defined but never used.","'updateUserAPI' is defined but never used.","'Avatar' is defined but never used.",["343"],["344"],["343"],["344"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'formValid' is assigned a value but never used.","'setConfirmLoading' is assigned a value but never used.","'modalText' is assigned a value but never used.","'setModalText' is assigned a value but never used.","'onChangeEstado' is assigned a value but never used.","'MenuOutlined' is defined but never used.","'paciente' is assigned a value but never used.","'useEffect' is defined but never used.",["343"],["344"],"no-global-assign","no-unsafe-negation"]